// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PocketMineStats.Data;

#nullable disable

namespace PocketMineStats.Data.Migrations
{
    [DbContext(typeof(StatsContext))]
    partial class StatsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PocketMineStats.Data.PlayerCountHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlayerCount")
                        .HasColumnType("int");

                    b.Property<int>("PlayerLimit")
                        .HasColumnType("int");

                    b.Property<int>("ServerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayerCountHistory");
                });

            modelBuilder.Entity("PocketMineStats.Data.PluginStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PluginStats");
                });

            modelBuilder.Entity("PocketMineStats.Data.ServerInfo", b =>
                {
                    b.Property<Guid>("UniqueServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("LastRequest")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Plugins")
                        .HasColumnType("json");

                    b.Property<Guid>("UniqueMachineId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UniqueRequestId")
                        .HasColumnType("char(36)");

                    b.HasKey("UniqueServerId");

                    b.ToTable("ServerInfo");
                });

            modelBuilder.Entity("PocketMineStats.Data.ServerTotals", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cores")
                        .HasColumnType("json");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GameVersions")
                        .HasColumnType("json");

                    b.Property<string>("Locations")
                        .HasColumnType("json");

                    b.Property<string>("OperatingSystems")
                        .HasColumnType("json");

                    b.Property<string>("PhpVersions")
                        .HasColumnType("json");

                    b.Property<string>("Platforms")
                        .HasColumnType("json");

                    b.Property<int>("PlayerCount")
                        .HasColumnType("int");

                    b.Property<int>("PlayerLimit")
                        .HasColumnType("int");

                    b.Property<string>("Releases")
                        .HasColumnType("json");

                    b.Property<int>("ServerCount")
                        .HasColumnType("int");

                    b.Property<string>("ServerVersions")
                        .HasColumnType("json");

                    b.HasKey("Id");

                    b.ToTable("ServerTotals");
                });

            modelBuilder.Entity("PocketMineStats.Data.ServerInfo", b =>
                {
                    b.OwnsOne("PocketMineStats.Data.Player", "Players", b1 =>
                        {
                            b1.Property<Guid>("ServerInfoUniqueServerId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Count")
                                .HasColumnType("int");

                            b1.Property<string>("CurrentList")
                                .HasColumnType("json");

                            b1.Property<string>("HistoryList")
                                .HasColumnType("json");

                            b1.Property<int>("Limit")
                                .HasColumnType("int");

                            b1.HasKey("ServerInfoUniqueServerId");

                            b1.ToTable("ServerInfo");

                            b1.WithOwner()
                                .HasForeignKey("ServerInfoUniqueServerId");
                        });

                    b.OwnsOne("PocketMineStats.Data.PocketMineInfo", "PocketMine", b1 =>
                        {
                            b1.Property<Guid>("ServerInfoUniqueServerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Api")
                                .HasColumnType("longtext");

                            b1.Property<int>("Build")
                                .HasColumnType("int");

                            b1.Property<string>("FullVersion")
                                .HasColumnType("longtext");

                            b1.Property<string>("MinecraftVersion")
                                .HasColumnType("longtext");

                            b1.Property<int>("Port")
                                .HasColumnType("int");

                            b1.Property<int>("Protocol")
                                .HasColumnType("int");

                            b1.Property<string>("Software")
                                .HasColumnType("longtext");

                            b1.Property<double>("TickUsage")
                                .HasColumnType("double");

                            b1.Property<long>("Ticks")
                                .HasColumnType("bigint");

                            b1.Property<int>("TicksPerSecond")
                                .HasColumnType("int");

                            b1.Property<string>("Version")
                                .HasColumnType("longtext");

                            b1.HasKey("ServerInfoUniqueServerId");

                            b1.ToTable("ServerInfo");

                            b1.WithOwner()
                                .HasForeignKey("ServerInfoUniqueServerId");
                        });

                    b.OwnsOne("PocketMineStats.Data.SystemInfo", "System", b1 =>
                        {
                            b1.Property<Guid>("ServerInfoUniqueServerId")
                                .HasColumnType("char(36)");

                            b1.Property<long>("AvailableMemory")
                                .HasColumnType("bigint");

                            b1.Property<int>("Cores")
                                .HasColumnType("int");

                            b1.Property<string>("Machine")
                                .HasColumnType("longtext");

                            b1.Property<long>("MainMemory")
                                .HasColumnType("bigint");

                            b1.Property<string>("OperatingSystem")
                                .HasColumnType("longtext");

                            b1.Property<string>("PhpVersion")
                                .HasColumnType("longtext");

                            b1.Property<string>("Platform")
                                .HasColumnType("longtext");

                            b1.Property<string>("Release")
                                .HasColumnType("longtext");

                            b1.Property<int>("ThreadCount")
                                .HasColumnType("int");

                            b1.Property<long>("TotalMemory")
                                .HasColumnType("bigint");

                            b1.HasKey("ServerInfoUniqueServerId");

                            b1.ToTable("ServerInfo");

                            b1.WithOwner()
                                .HasForeignKey("ServerInfoUniqueServerId");
                        });

                    b.Navigation("Players");

                    b.Navigation("PocketMine");

                    b.Navigation("System");
                });
#pragma warning restore 612, 618
        }
    }
}
